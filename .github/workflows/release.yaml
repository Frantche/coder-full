name: Docker CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set lowercase repo name
        run: |
          echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Extract ARGs from Dockerfile
        run: |
          awk '/^ARG / { split($2, kv, "="); printf("%s=%s\n", kv[1], kv[2]) }' dockerfile > versions.env

          # Extract docker version
          source versions.env
          docker_short=$(echo "$DOCKER_CE_VERSION" | sed 's/.*:\([^:-]*\).*/\1/')
          echo "DOCKER_VERSION=${docker_short}" >> versions.env

      - name: Install Container Structure Test
        run: |
          curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
          chmod +x container-structure-test-linux-amd64
          sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test

      - name: Render image-tests.yaml
        run: |
          set -a
          source versions.env
          set +a
          envsubst < image-tests.yaml > image-tests-rendered.yaml

      - name: Build Docker Image (for PR test)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: testimage:pr
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Container Structure Tests
        run: |
          container-structure-test test \
            --image testimage:pr \
            --config image-tests-rendered.yaml

  publish-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repo name
        run: |
          echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Get next version
        id: get_version
        uses: thenativeweb/get-next-version@main
        with:
          prefix: ''

      - name: Create and push Git tag
        env:
          VERSION: ${{ steps.get_version.outputs.version }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$VERSION"
          git push origin "$VERSION"

      - name: Build and push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO_LOWER }}:${{ steps.get_version.outputs.version }}
            ghcr.io/${{ env.REPO_LOWER }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
